global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'kmrl-production'
    environment: 'production'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Backend API Metrics
  - job_name: 'kmrl-backend'
    static_configs:
      - targets: ['backend:9090']
    metrics_path: /metrics
    scrape_interval: 10s
    scrape_timeout: 10s
    honor_labels: false
    honor_timestamps: true
    params:
      format: ['prometheus']

  # AI Service Metrics
  - job_name: 'kmrl-ai-service'
    static_configs:
      - targets: ['ai-service:8002']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s

  # PostgreSQL Metrics
  - job_name: 'kmrl-postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    params:
      collect[]:
        - 'pg_stat_database'
        - 'pg_stat_bgwriter'
        - 'pg_stat_activity'
        - 'pg_locks'
        - 'pg_stat_replication'

  # Redis Metrics  
  - job_name: 'kmrl-redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Nginx Metrics
  - job_name: 'kmrl-nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Docker Container Metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Blackbox Exporter (Endpoint Monitoring)
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://kmrl-train-system.com
        - https://kmrl-train-system.com/api/health
        - https://kmrl-train-system.com/ai/health/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate Monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - kmrl-train-system.com:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom Application Metrics
  - job_name: 'kmrl-custom-metrics'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: /api/metrics
    scrape_interval: 30s
    basic_auth:
      username: 'prometheus'
      password: 'secure_metrics_password'

  # WebSocket Connection Metrics
  - job_name: 'kmrl-websockets'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: /api/ws/metrics
    scrape_interval: 15s

  # AI Model Performance Metrics
  - job_name: 'kmrl-ai-models'
    static_configs:
      - targets: ['ai-service:8001']
    metrics_path: /metrics/models
    scrape_interval: 60s

  # Train Schedule Metrics
  - job_name: 'kmrl-schedules'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: /api/metrics/schedules
    scrape_interval: 60s

  # Prometheus Self-Monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics

# Storage Configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote Write (if using remote storage)
# remote_write:
#   - url: "https://prometheus-remote-write.kmrl.com/api/v1/write"
#     basic_auth:
#       username: "kmrl"
#       password: "remote_write_password"

# Recording Rules for Performance
recording_rules:
  groups:
    - name: kmrl_sli_slo
      interval: 30s
      rules:
        # API Success Rate
        - record: kmrl:api_success_rate
          expr: >
            sum(rate(http_requests_total{job="kmrl-backend", code=~"2.."}[5m])) /
            sum(rate(http_requests_total{job="kmrl-backend"}[5m]))

        # API Response Time P99
        - record: kmrl:api_latency_p99
          expr: >
            histogram_quantile(0.99,
              sum(rate(http_request_duration_seconds_bucket{job="kmrl-backend"}[5m])) by (le)
            )

        # Database Connection Pool Usage
        - record: kmrl:db_pool_usage
          expr: >
            (pg_stat_database_numbackends / pg_settings_max_connections) * 100

        # AI Optimization Success Rate
        - record: kmrl:ai_optimization_success_rate
          expr: >
            sum(rate(ai_optimization_success_total[5m])) /
            sum(rate(ai_optimization_total[5m]))

        # Redis Memory Usage
        - record: kmrl:redis_memory_usage_percent
          expr: >
            (redis_memory_used_bytes / redis_memory_max_bytes) * 100

        # Train Schedule Accuracy
        - record: kmrl:schedule_accuracy
          expr: >
            sum(rate(schedule_matches_total[1h])) /
            sum(rate(schedule_total[1h]))

# Global Configuration
global_config:
  # How frequently to scrape targets by default
  scrape_interval: 15s
  
  # How long until a scrape request times out
  scrape_timeout: 10s
  
  # How frequently to evaluate rules
  evaluation_interval: 15s
  
  # Labels to add to any time series when communicating with external systems
  external_labels:
    monitor: 'kmrl-production'
    region: 'india-west'
    datacenter: 'kochi'
